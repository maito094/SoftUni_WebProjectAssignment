@model ProductModel
@using AutomationShopHub.Core.Contracts;
@using AutomationShopHub.Extensions;
@using Microsoft.AspNetCore.Http;

@inject IAgentService agentService
@inject IClientService clientService
@inject IOrderService orderService
@inject IHttpContextAccessor HttpContextAccessor
@{

    var agent = await agentService.GetAgentByUserId(User.Id());
    var client = await clientService.GetClientByUserId(User.Id());
    var isSameAgent = agent.SalesAgentId == Model.SalesAgentId;
    var orderIdSession = HttpContextAccessor.HttpContext.Session.GetString("orderId");


}
<div style="padding:20px 20px 20px 20px" class="col-md-4 mt-5">
   <!-- Card -->
   <div style="padding: 0px 10px; border: solid; border-color:cornsilk " class="card">

      <!--Card image-->
      <div style="display:flex;justify-content:center" class="view overlay">
         <img class="card-img-top" src="@Model.ProductType.ImageUrl" alt="Card image cap">
         <a href="#!">
            <div class="mask rgba-white-slight"></div>
         </a>
      </div>

      <!--Card content-->
      <div style="height:450px" class="card-body">

         <div>
            <!--Title-->
            <h4 class="card-title">@Model.Name</h4>
            <!--Text-->
            <p style="font-weight:bold" class="card-text">@Model.Brand.Name</p>
            <p style="height: 60px;  margin-top:20px" class="card-text">@Model.ProductType.Description</p>
         </div>



         <div>
            <p style="font-family:fantasy">@Model.Category.Name</p>
            <p class="card-footer">@Model.SalesAgent.AgentName</p>
            <!-- Provides extra visual weight and identifies the primary action in a set of buttons -->
            <a asp-controller="Product" asp-action="Details" asp-route-guidId="@Model.Id"
               class="btn btn-light-blue btn-md">Details</a>
            <h6>

               Price :
               <b>@String.Format("{0:f2}", Model.ProductType.Price) BGN</b>
            </h6>
         </div>

         <br />

            @if (this.User.Identity.IsAuthenticated)
            {

                @if (User.IsInRole("Client"))
                {
                    bool isOrdered = false;

                    if (!string.IsNullOrEmpty(orderIdSession) && client != null)
                    {
                        isOrdered = await orderService.isOrderedByClientWithId(client.Id, @Model.Id, orderIdSession);

                    }

                    @if (!isOrdered)
                    {
                     <form class="ml-2" asp-controller="Order" asp-action="AddOrder" asp-route-id="@Model.Id" method="post">
                        <input class="btn btn-primary" type="submit" value="Order" />
                     </form>
                    }
                    else
                    {
                     <form class="ml-2" asp-controller="Order" asp-action="Remove" asp-route-id="@Model.Id" method="post">
                        <input class="btn btn-danger" type="submit" value="Remove Order" />
                     </form>
                    }
                }
            }
      </div>

   </div>
   <!-- Card -->
</div>



